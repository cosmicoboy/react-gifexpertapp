{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACQ,uBACIO,KAAO,OACPC,MAAQT,EACRU,SApBU,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCLfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAiBZM,GAjBY,4CAAH,sDCDXO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAGGqB,EDrByBK,CAAc1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,6CAAd,cAA6DhB,EAA7D,OAECoB,GAAW,mBAAGJ,UAAU,yCAAb,uBAGZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEjBzBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,UAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAaA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,Y,MCvBpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31da43a3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport propTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState(\"\")\n\n    const handleInputChange = (e) => {\n        setinputValue( e.target.value )  \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if( inputValue.trim().length > 2) {\n            setCategories( cats => [ inputValue, ...cats,] );\n            setinputValue(\"\");\n        }\n\n    }\n\n\n    return (\n        <form onSubmit={ handleSubmit }>\n                <input\n                    type = \"text\"\n                    value= {inputValue}\n                    onChange= { handleInputChange }\n                />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: propTypes.func.isRequired\n\n}\n","\n\n\n    export const getGifs = async(category) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=fueOvkHOAHMea1H1rdjy8D8zRe8oMIzW`;\n        const resp = await fetch( url );\n        const {data} = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n\n\n\n        })\n\n        return gifs;\n\n\n    }","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n\n    \n    return (\n        <div className=\"card animate__animated animate__backInDown\">\n            <img src={ url } alt={ title } />\n            <p> {title} </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from \"./GifGridItem\"\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading} = useFetchGifs( category );\n    \n    return (\n        <>\n            <h3 className=\"card animate__animated animate__backInDown\"> {category} </h3>\n\n            {loading && <p className=\"card animate__animated animate__bounce\"> Loading </p>}\n        \n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            {...img}\n                        \n                        />\n                    ))\n\n\n                }\n                \n            </div>\n\n        </>   \n    )   \n}\n","import { useEffect, useState } from \"react\"\nimport { getGif, getGifs} from \"../helpers/getGifs\"\n\n\nexport const useFetchGifs = ( category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n                    \n            })\n\n\n    }, [category]) \n\n\n    return state; // {data:[], loading: true};\n\n\n}\n\n\n\n\n\n","import React, {useState} from \"react\"\nimport { AddCategory } from './components/AddCategory'\nimport {GifGrid} from \"./components/GifGrid\"\n\nexport const GifExpertApp = () => {           \n           \n    const [categories, setCategories] = useState([\"Hades\"])\n\n    // const handleAdd = () => {\n    //     // me gusta mÃ¡s este\n    //     // setCategories( [...categories, \"Demeter\"] );\n\n    //     //setCategories con \"callback\"\n    //     setCategories( cats => [...cats, \"Demeter\"])\n    // }\n\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories} />\n            <hr />\n\n\n            <ol>\n                { \n                    categories.map( category => \n                        <GifGrid \n                            key = { category }\n                            category ={ category } />\n                    )\n                }\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from \"./GifExpertApp\"\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}